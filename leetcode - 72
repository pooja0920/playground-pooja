class Solution:
    def minDistance(self, word1: str, word2: str) -> int:
        #helper function to perform the recursion
        def helper(word1, word2, m, n):
            #base cases
            if m == 0:
                return n
            if n == 0:
                return m

            #if last characters match, no operation needed
            if word1[m - 1] == word2[n - 1]:
                return helper(word1, word2, m - 1, n - 1)

            #if last characters don't match, consider three operations: Insert, Delete, Replace
            return 1 + min(
                helper(word1, word2, m, n - 1),    # Insert
                helper(word1, word2, m - 1, n),    # Delete
                helper(word1, word2, m - 1, n - 1) # Replace
            )

        return helper(word1, word2, len(word1), len(word2))
